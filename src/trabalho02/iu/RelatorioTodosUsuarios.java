/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trabalho02.iu;

import trabalho02.dados.Database;
import trabalho02.modelo.Aluno;
import trabalho02.modelo.Professor;
import trabalho02.modelo.Usuario;
import trabalho02.modelo.Emprestimo;
/**
 *
 * @author Erick Yoshike
 */
public class RelatorioTodosUsuarios extends javax.swing.JFrame {
 Database db = Database.getInstance();

        Usuario u[] = db.getUsuarios();
         Emprestimo e[]= db.getEmprestimos();
    /**
     * Creates new form RelatorioTodosUsuarios
     */
    public RelatorioTodosUsuarios() {
        initComponents();
        
        

        for (int i = 0; i < db.getContU(); i++) {
            if (u[i] instanceof Aluno){
                cbUsuarioAluno.addItem(u[i].getNome());
            }
            else if (u[i] instanceof Professor){
                cbUsuarioProfessor.addItem(u[i].getNome());
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbUsuarioAluno = new javax.swing.JComboBox<String>();
        cbUsuarioProfessor = new javax.swing.JComboBox<String>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaTodosUsuarios = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cbUsuarioAluno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione o aluno" }));
        cbUsuarioAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUsuarioAlunoActionPerformed(evt);
            }
        });

        cbUsuarioProfessor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione o professor" }));
        cbUsuarioProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUsuarioProfessorActionPerformed(evt);
            }
        });

        txtAreaTodosUsuarios.setColumns(20);
        txtAreaTodosUsuarios.setRows(5);
        jScrollPane1.setViewportView(txtAreaTodosUsuarios);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbUsuarioAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                        .addComponent(cbUsuarioProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbUsuarioAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbUsuarioProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbUsuarioAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUsuarioAlunoActionPerformed
 txtAreaTodosUsuarios.append( "Nome \t ID \t Curso \t Ano \t Emprestimo \t Atraso\n\n\n" );       
 for(int i = 0; i< db.getContU(); i++){
     
        if (((String)cbUsuarioAluno.getSelectedItem()).equals(u[i].getNome())){
            int j = db.getContE();
           if(j !=0){
               for( j =0; j<db.getContE();j++){
                if(u[i].getCodUsuario() == e[j].getCodUsuario()){
                     txtAreaTodosUsuarios.append( u[i].getNome() + "\t" 
                               + u[i].getCodUsuario() + "\t"
                               + ((Aluno)u[i]).getCurso()+ "\t"
                               +((Aluno)u[i]).getAno() + "\t"
                               + "Sim \t"
                               + "Sim \n"
                               + "--------------------------------------------------------------------------------------------------------------\n\n");
                 }
            
              
                else { 
                    
                    
                               txtAreaTodosUsuarios.append( u[i].getNome() + "\t" 
                               + u[i].getCodUsuario() + "\t"
                               + ((Aluno)u[i]).getCurso()+ "\t"
                               +((Aluno)u[i]).getAno() + "\t"
                               + "Não \t"
                               + "Não \n"
                               + "--------------------------------------------------------------------------------------------------------------\n\n");
                   }
                }   
             }
              else { 
                    
                               txtAreaTodosUsuarios.append( u[i].getNome() + "\t" 
                               + u[i].getCodUsuario() + "\t"
                               + ((Aluno)u[i]).getCurso()+ "\t"
                               +((Aluno)u[i]).getAno() + "\t"
                               + "Não \t"
                               + "Não \n"
                               + "----------------------------------------------------------------------------------------------------------------\n\n");
                   }
            
             }
        } 
    }//GEN-LAST:event_cbUsuarioAlunoActionPerformed

    private void cbUsuarioProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUsuarioProfessorActionPerformed
          txtAreaTodosUsuarios.append( "Nome \t ID \t \t Emprestimo \t Atraso\n\n\n" );
      
        for(int i = 0; i< db.getContU(); i++){
     
        if (((String)cbUsuarioProfessor.getSelectedItem()).equals(u[i].getNome())){
            int j = db.getContE();
           if(j !=0){
               for(j =0; j<db.getContE();j++){
                if(u[i].getCodUsuario() == e[j].getCodUsuario()){
                     txtAreaTodosUsuarios.append( u[i].getNome() + "\t" 
                               + u[i].getCodUsuario() + "\t"
                               + ((Professor)u[i]).getTitulacao()+ "\t"
                               + "Sim \t"
                               + "Sim \n"
                               + "---------------------------------------------------------------------------------------\n\n");
                 }
            
              
                else { 
                    txtAreaTodosUsuarios.append( u[i].getNome() + "\t" 
                               + u[i].getCodUsuario() + "\t"
                               + ((Professor)u[i]).getTitulacao()+ "\t"
                               + "Não \t"
                               + "Não \n"
                               + "----------------------------------------------------------------------------------------\n\n");
                   }
                }   
             }
              else { 
                    txtAreaTodosUsuarios.append( u[i].getNome() + "\t" 
                               + u[i].getCodUsuario() + "\t"
                               + ((Professor)u[i]).getTitulacao()+ "\t"
                               + "Não \t"
                               + "Não \n"
                               + "----------------------------------------------------------------------------------------\n\n");
                }
            
             }
        }   
    }//GEN-LAST:event_cbUsuarioProfessorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RelatorioTodosUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RelatorioTodosUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RelatorioTodosUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RelatorioTodosUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RelatorioTodosUsuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbUsuarioAluno;
    private javax.swing.JComboBox<String> cbUsuarioProfessor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtAreaTodosUsuarios;
    // End of variables declaration//GEN-END:variables
}
